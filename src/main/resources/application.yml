server:
  port: 8080
  servlet:
    context-path: / #  에서 / 로 변경함
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blog?serverTimezone=Asia/Seoul
    username: root
    password: root!234

  mustache:
    suffix: .html
    charset: "UTF-8"
    content-type: "text/html; charset=UTF-8"

#    expose-session-attributes: true # session 인식여부 체크


  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update #create(시스템 재시작 할때마다 모든 데이터를 날리고 새로 create), update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false # false일 경우 Hibernate5 가 사용하는 기본 넘버링 전략을 사용하지 않음
    show-sql: true
    properties:
      hibernate.format_sql: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            clientId: c42d91eed60095b3e0713a4ee9ce5872 # REST API 키
            clientSecret: Srtadww6WeY987SDMyoU4tNl9DvYkRRL
            # [디벨로퍼스] > [내 어플리케이션] > [카카오 로그인] > [보안]에서 확인
            scope:
              - profile_nickname
              - account_email
              - profile_image
            clientName: Kakao # 클라이언트 네임은 구글 페이스북도 대문자로 시작함
            authorizationGrantType: authorization_code
            redirectUri: http://localhost:8080/login/oauth2/code/kakao # google, facebook, twitter 은 기본 provider 이므로 redirect-uri 가 기본으로 고정되어 있지만 이것은 없으므로 수동으로 등록해야 함
            clientAuthenticationMethod: POST

        provider:
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize # /oauth2/authorization/kakao 를 이용하여 로그인창을 열려고 할때 최종 호출되어지는 로그인페이지 주소
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userInfoAuthenticationMethod: POST
            userNameAttribute: id # 회원정보를 json으로 받을때 id 키값으로 kakao가 리턴해줌

#  devtools:
#    restart:
#      enabled: false



#      properties:
#        hibernate.frmat: true

#      Hibernate의 변경사항#
#        Hibernate 5부터 MSSQL에서의 GenerationType.AUTO는 IDENTITY가 아닌 TABLE을 기본 시퀀스 전략으로 사용합니다.

#     참고  https://jojoldu.tistory.com/295

#      hibernate.id.new_generator_mappings = false일 경우
#         이 경우 사용하는 DB(Dialect)에 의해 Generator가 결정됩니다.
#         Dialect에서 supportsIdentityColumns()가 true 인 경우 IdentityGenerator를 사용하게 됩니다.
#         false 인 경우 SequenceStyleGenerator를 사용하게 됩니다.
#
#      hibernate.id.new_generator_mappings = true일 경우
#          이 경우 Sequence 기능을 지원하는 경우 SequenceGenerator를 사용하고,
#           Sequence 기능을 사용하지 않는 경우 TableGenerator를 사용합니다.





