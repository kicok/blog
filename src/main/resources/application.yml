server:
  port: 8080
  servlet:
    context-path: /blog
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blog?serverTimezone=Asia/Seoul
    username: root
    password: root!234

  mustache:
    suffix: .html
    expose-session-attributes: true


  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update #create(시스템 재시작 할때마다 모든 데이터를 날리고 새로 create), update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false # false일 경우 Hibernate5 가 사용하는 기본 넘버링 전략을 사용하지 않음
    show-sql: true
    properties:
      hibernate.format_sql: true



#      properties:
#        hibernate.frmat: true

#      Hibernate의 변경사항#
#        Hibernate 5부터 MSSQL에서의 GenerationType.AUTO는 IDENTITY가 아닌 TABLE을 기본 시퀀스 전략으로 사용합니다.

#     참고  https://jojoldu.tistory.com/295

#      hibernate.id.new_generator_mappings = false일 경우
#         이 경우 사용하는 DB(Dialect)에 의해 Generator가 결정됩니다.
#         Dialect에서 supportsIdentityColumns()가 true 인 경우 IdentityGenerator를 사용하게 됩니다.
#         false 인 경우 SequenceStyleGenerator를 사용하게 됩니다.
#
#      hibernate.id.new_generator_mappings = true일 경우
#          이 경우 Sequence 기능을 지원하는 경우 SequenceGenerator를 사용하고,
#           Sequence 기능을 사용하지 않는 경우 TableGenerator를 사용합니다.





